buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:0.14.0"
        classpath "com.jakewharton.sdkmanager:gradle-plugin:0.12.+"
    }
}

apply plugin: "android-sdk-manager"
apply plugin: "android-library"
apply plugin: "maven"

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 21
    }
}

task cloneSdk << {
    exec {
        commandLine "git", "clone", "git://git.videolan.org/vlc-ports/android.git", "vlc-android"
    }
    exec {
        workingDir file("vlc-android")
        commandLine "git", "checkout", "--quiet", String.format("%s", mavenProperty("buildhash"))
    }
}

cloneSdk.onlyIf {
    !file("vlc-android").exists()
}

task cloneVlc(dependsOn: cloneSdk) << {
    exec {
	workingDir file("vlc-android")
	commandLine "git", "clone", "git://git.videolan.org/vlc.git", "vlc"
    }
}

cloneVlc.onlyIf {
    !file("vlc-android/vlc").exists()
}

task compileSdk(dependsOn: cloneVlc) << {
    exec {
        workingDir file("vlc-android")
        commandLine "git", "apply", "--index", file("patch/update_tested_hash.patch").path
    }
    exec {
        workingDir file("vlc-android")
        commandLine "sh", "compile.sh", "--build", "jni", "release"
    }
    exec {
        workingDir file("vlc-android")
        commandLine "make", ".sdk"
    }
}

task buildSdk(dependsOn: compileSdk) << {
    copy {
        from "vlc-android/libvlc/libs"
        into "src/main/jniLibs"
    }
    copy {
        from "vlc-android/libvlc/src/org/videolan/libvlc"
        into "src/main/java/org/videolan/libvlc"
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository url: String.format("file://%s", mavenLocalPath())

            pom {
                groupId = mavenProperty("group")
                artifactId = mavenProperty("artifact")
                version = mavenProperty("version")
            }
        }
    }
}

def mavenLocalPath() {
    def homePath = System.getProperty("user.home")
    def mavenPath = ".m2/repository"

    return new File(homePath, mavenPath).absolutePath
}

def mavenProperty(property) {
    def mavenFile = file("maven.properties")
    def mavenProperties = new Properties()

    mavenProperties.load(mavenFile.newInputStream())

    return mavenProperties[property]
}

task generateWrapper(type: Wrapper) {
    description "Generates Gradle wrapper."

    gradleVersion = "2.1"
}
